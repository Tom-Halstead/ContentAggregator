######## AUTOMATIC DATABASE CREATION UPON APPLICATION START ########
# Enable automatic execution of schema.sql and data.sql for non-embedded databases
spring.sql.init.mode=always

# Specify the locations for schema and data scripts (default is classpath:db/schema.sql and classpath:db/data.sql)
spring.sql.init.schema-locations=classpath:db/schema.sql
spring.sql.init.data-locations=classpath:db/data.sql

# Avoid stopping the application if errors occur during SQL execution (optional, for safety)
spring.sql.init.continue-on-error=true

######## Hibernate DDL settings ########
spring.jpa.hibernate.ddl-auto=validate

######## PostgreSQL DATABASE configuration ########
spring.datasource.url=jdbc:postgresql://localhost:5432/your_database_name
spring.datasource.username=your_username
spring.datasource.password=your_password

# Driver class (usually auto-detected, but it doesn't hurt to specify it)
spring.datasource.driver-class-name=org.postgresql.Driver

######## DEBUGGING SQL STATEMENTS ########
# PostgreSQL dialect for Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Enable SQL statements and parameters in logs (for debugging purposes)
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true


######## OAuth 2.0 client configuration for Cognito ########

# OAuth 2.0 client configuration for Cognito
spring.security.oauth2.client.registration.cognito.client-id=4ss9iluj4drs0om2umjukm4lld
spring.security.oauth2.client.registration.cognito.client-secret=<client-secret>
spring.security.oauth2.client.registration.cognito.scope=phone,openid,email
spring.security.oauth2.client.registration.cognito.redirect-uri=https://d84l1y8p4kdic.cloudfront.net
spring.security.oauth2.client.provider.cognito.issuer-uri=https://cognito-idp.us-east-2.amazonaws.com/us-east-2_espRl1LNW
spring.security.oauth2.client.provider.cognito.user-name-attribute=username


########## SERVE STATIC FILES #########

spring.web.resources.static-locations=classpath:/static/
