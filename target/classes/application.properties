######## AUTOMATIC DATABASE CREATION UPON APPLICATION START ########
# Enable automatic execution of schema.sql and data_backup.sql for non-embedded databases
spring.sql.init.mode=never

# Specify the locations for schema and data scripts (default is classpath:db/schema.sql and classpath:db/data_backup.sql)
spring.sql.init.schema-locations=classpath:db/schema.sql
#spring.sql.init.data-locations=classpath:db/empty.sql
spring.sql.init.data-locations=none

# Avoid stopping the application if errors occur during SQL execution (optional, for safety)
spring.sql.init.continue-on-error=true

######## Hibernate DDL settings ########
spring.jpa.hibernate.ddl-auto=update

######## PostgreSQL DATABASE configuration ########
spring.datasource.url=jdbc:postgresql://localhost:5432/ContentAggregator
spring.datasource.username=postgres
spring.datasource.password=billythekid

# Driver class (usually auto-detected, but it doesn't hurt to specify it)
spring.datasource.driver-class-name=org.postgresql.Driver


# Enable SQL statements and parameters in logs (for debugging purposes)
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true


######## OAuth 2.0 client configuration for Cognito ########

# OAuth 2.0 client configuration for Cognito
spring.security.oauth2.client.registration.cognito.client-id=${CONTENT_AGGREGATOR_COGNITO_CLIENT_ID}
spring.security.oauth2.client.registration.cognito.client-secret=${CONTENT_AGGREGATOR_COGNITO_SECRET_KEY}
spring.security.oauth2.client.registration.cognito.scope=openid, email, profile
spring.security.oauth2.client.registration.cognito.authorization-uri=https://us-east-29qbfa8ryf.auth.us-east-2.amazoncognito.com/oauth2/authorize
spring.security.oauth2.client.registration.cognito.token-uri=https://us-east-29qbfa8ryf.auth.us-east-2.amazoncognito.com/oauth2/token
spring.security.oauth2.client.registration.cognito.user-info-uri=https://us-east-29qbfa8ryf.auth.us-east-2.amazoncognito.com/oauth2/userInfo
spring.security.oauth2.client.provider.cognito.issuer-uri=https://cognito-idp.us-east-2.amazonaws.com/us-east-2_9qBFa8Ryf
spring.security.oauth2.client.provider.cognito.user-name-attribute=sub
spring.security.oauth2.client.registration.cognito.redirect-uri=http://localhost:8080/login/oauth2/code/cognito


# Spring Security OAuth2 Resource Server JWT Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://cognito-idp.us-east-2.amazonaws.com/us-east-29qbfa8ryf
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://cognito-idp.us-east-2.amazonaws.com/us-east-29qbfa8ryf/.well-known/jwks.json

# Cookies and Session Storage

server.servlet.session.tracking-modes=cookie
#server.servlet.session.persistent=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
spring.security.oauth2.client.registration.cognito.authorization-grant-type=authorization_code
server.servlet.session.timeout=60m
server.servlet.session.persistent=true
server.servlet.session.cookie.same-site=lax






# Cognito Domain for Logout Handling
aws.cognito.domain=https://us-east-29qbfa8ryf.auth.us-east-2.amazoncognito.com


########## SERVE STATIC FILES #########

spring.web.resources.static-locations=classpath:/static/

# Set Hibernate logging level to WARN to reduce output
logging.level.org.hibernate=ERROR


## DEBUGGING ##

logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=TRACE





